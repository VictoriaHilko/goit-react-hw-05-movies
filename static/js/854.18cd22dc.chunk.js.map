{"version":3,"file":"static/js/854.18cd22dc.chunk.js","mappings":"wMACA,EAA4B,gCAA5B,EAAmE,2BAAnE,EAA0G,gCAA1G,EAAyJ,mC,SCC5IA,EAAe,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,SAEpC,OACI,gBAAKC,UAAWC,EAAhB,UACI,kBAAMD,UAAWC,EAAUF,SAAUA,EAArC,WACI,kBACIC,UAAWC,EACXC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,6BACZP,SAAUA,KAEd,mBAAQI,KAAK,SAASF,UAAWC,EAAjC,UACI,iBAAKK,KAAK,OAAOC,OAAO,KAAKC,OAAO,OAAOC,cAAc,QAAQC,eAAe,QAAQC,YAAY,IAAIC,QAAQ,YAAYC,MAAM,KAAKC,MAAM,6BAA7I,WAA0K,mBAAQC,GAAG,KAAKC,GAAG,KAAKC,EAAE,OAAa,iBAAMC,GAAG,KAAKC,GAAG,QAAQC,GAAG,KAAKC,GAAG,UAArP,aAKnB,E,mCCdYC,EAAS,WAElB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,MAEAC,EAAAA,EAAAA,YAAU,WAAO,IAAD,EACNL,EAAK,UAAGG,EAAaG,IAAI,gBAApB,QAAgC,GACtCN,IAGLO,EAAAA,EAAAA,IAAUP,GAAOQ,KAAKT,EACvB,GAAE,CAACI,IAkBN,OACI,iCACI,SAAChC,EAAD,CACIE,SAdO,SAAAoC,GACfA,EAAMC,iBAENN,EAA0B,KAAVJ,EAAe,CAAEA,MAAAA,GAAU,CAAC,GAEvB,KAAjBA,EAAMW,SACNZ,EAAU,IACVa,EAAAA,OAAAA,KAAY,qCAEjB,EAMSxC,SAnBO,SAAAqC,GACfR,EAASQ,EAAMI,OAAOC,MACvB,KAmBK,SAACC,EAAA,EAAD,CAAYjB,OAAQA,MAG/B,C","sources":["webpack://react-homework-template/./src/components/MoviesSearch/MoviesSearch.module.css?9702","components/MoviesSearch/MoviesSearch.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"searchbar\":\"MoviesSearch_searchbar__r8wBs\",\"form\":\"MoviesSearch_form__JG0bG\",\"formInput\":\"MoviesSearch_formInput__sCLwL\",\"searchButton\":\"MoviesSearch_searchButton__BT1Aq\",\"buttonLabel\":\"MoviesSearch_buttonLabel__6pQzk\"};","import css from './MoviesSearch.module.css';\n\nexport const MoviesSearch = ({onChange, onSubmit}) => {\n\n    return (\n        <div className={css.searchbar}>\n            <form className={css.form} onSubmit={onSubmit}>\n                <input\n                    className={css.formInput}\n                    type=\"text\"\n                    autoComplete=\"off\"\n                    autoFocus\n                    placeholder=\"Search films or serials...\"\n                    onChange={onChange}\n                />\n                <button type=\"submit\" className={css.searchButton}>\n                    <svg fill=\"none\" height=\"25\" stroke=\"#000\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"11\" cy=\"11\" r=\"8\"></circle><line x1=\"21\" x2=\"16.65\" y1=\"21\" y2=\"16.65\"></line> </svg>\n                </button>\n            </form>\n        </div>\n    );\n};","import { MoviesList } from \"components/MoviesList/MoviesList\";\nimport { MoviesSearch } from \"components/MoviesSearch/MoviesSearch\";\nimport { Notify } from \"notiflix\";\nimport { useEffect, useState } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { getMovies } from \"utils/movies-api\";\n\nexport const Movies = () => {\n    \n    const [movies, setMovies] = useState([]);\n    const [query, setQuery] = useState('');\n    const [searchParams, setSearchParams] = useSearchParams();\n\n    useEffect(() => {\n        const query = searchParams.get('query') ?? '';\n        if (!query) {\n          return;\n        }\n        getMovies(query).then(setMovies);\n      }, [searchParams]);\n\n\n      const onChange = event => {\n        setQuery(event.target.value);\n      };\n    \n      const onSubmit = event => {\n        event.preventDefault();\n\n        setSearchParams(query !== '' ? { query } : {});\n\n        if (query.trim() === '') {\n            setMovies([]);\n            Notify.info('Please enter some value to search');\n        }\n      };\n\n    return (\n        <>\n            <MoviesSearch\n                onSubmit={onSubmit}\n                onChange={onChange}\n            />\n            <MoviesList movies={movies}/>\n        </>\n    );\n};\n"],"names":["MoviesSearch","onChange","onSubmit","className","css","type","autoComplete","autoFocus","placeholder","fill","height","stroke","strokeLinecap","strokeLinejoin","strokeWidth","viewBox","width","xmlns","cx","cy","r","x1","x2","y1","y2","Movies","useState","movies","setMovies","query","setQuery","useSearchParams","searchParams","setSearchParams","useEffect","get","getMovies","then","event","preventDefault","trim","Notify","target","value","MoviesList"],"sourceRoot":""}